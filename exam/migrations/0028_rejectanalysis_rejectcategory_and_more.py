# Generated by Django 4.2.6 on 2025-08-02 08:46

import auto_prefetch
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('exam', '0027_add_cancellation_reason'),
    ]

    operations = [
        migrations.CreateModel(
            name='RejectAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_date', models.DateField(help_text='Month and year for this analysis (typically first day of month)')),
                ('total_examinations', models.PositiveIntegerField(help_text='Total examinations performed for the month')),
                ('total_images', models.PositiveIntegerField(help_text='Total images produced (including retakes and originals)')),
                ('total_retakes', models.PositiveIntegerField(help_text='Total number of retake images')),
                ('reject_rate', models.DecimalField(decimal_places=2, help_text='Reject rate percentage: (total_retakes/total_images) * 100', max_digits=5)),
                ('drl_compliance', models.BooleanField(default=True, help_text='Indicates if reject rate meets Malaysian DRL guidelines')),
                ('qap_target_rate', models.DecimalField(decimal_places=2, default=8.0, help_text='Target reject rate for this modality (default 8% per international guidelines)', max_digits=5)),
                ('comments', models.TextField(blank=True, help_text='Analysis comments and findings for the month', null=True)),
                ('corrective_actions', models.TextField(blank=True, help_text='Corrective actions taken or planned based on this analysis', null=True)),
                ('root_cause_analysis', models.TextField(blank=True, help_text='Root cause analysis for high reject rates', null=True)),
                ('approval_date', models.DateTimeField(blank=True, help_text='Date when analysis was approved', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reject Analysis',
                'verbose_name_plural': 'Reject Analyses',
                'ordering': ['-analysis_date', 'modality'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RejectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('name', models.CharField(help_text="Category name (e.g., 'Positioning Errors')", max_length=100)),
                ('category_type', models.CharField(choices=[('HUMAN_FAULTS', 'Human Faults'), ('EQUIPMENT', 'Equipment'), ('PROCESSING', 'Processing'), ('OTHERS', 'Others')], help_text='Main category classification', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Detailed description of this category', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Enable/disable this category')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reject Category',
                'verbose_name_plural': 'Reject Categories',
                'ordering': ['category_type', 'order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pacsserver',
            name='include_in_reject_analysis',
            field=models.BooleanField(default=True, help_text="Include this PACS server in reject analysis calculations. Uncheck for imported data from other facilities or archived data that shouldn't count towards institution's statistics."),
        ),
        migrations.CreateModel(
            name='RejectReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('reason', models.CharField(help_text="Specific reject reason (e.g., 'Over Exposure / High Index')", max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description and guidance', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Enable/disable this reason')),
                ('qap_code', models.CharField(blank=True, help_text='Malaysian QAP classification code if applicable', max_length=20, null=True)),
                ('severity_level', models.CharField(choices=[('LOW', 'Low Impact'), ('MEDIUM', 'Medium Impact'), ('HIGH', 'High Impact'), ('CRITICAL', 'Critical - Immediate Action Required')], default='MEDIUM', help_text='Severity level for prioritizing corrective actions', max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('category', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reasons', to='exam.rejectcategory')),
            ],
            options={
                'verbose_name': 'Reject Reason',
                'verbose_name_plural': 'Reject Reasons',
                'ordering': ['category', 'order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RejectIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reject_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when reject was identified')),
                ('retake_count', models.PositiveSmallIntegerField(default=1, help_text='Number of retakes required for this examination')),
                ('original_technique', models.CharField(blank=True, help_text='Original technique used (kVp, mAs, etc.)', max_length=100, null=True)),
                ('corrected_technique', models.CharField(blank=True, help_text='Corrected technique for retake', max_length=100, null=True)),
                ('patient_factors', models.TextField(blank=True, help_text='Patient-related factors that contributed to the reject (motion, cooperation, etc.)', null=True)),
                ('equipment_factors', models.TextField(blank=True, help_text='Equipment-related factors (calibration, malfunction, etc.)', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the reject incident', null=True)),
                ('immediate_action_taken', models.TextField(blank=True, help_text='Immediate corrective action taken', null=True)),
                ('follow_up_required', models.BooleanField(default=False, help_text='Indicates if follow-up action is required')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('analysis', auto_prefetch.ForeignKey(help_text='Monthly analysis this incident belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='exam.rejectanalysis')),
                ('examination', auto_prefetch.ForeignKey(help_text='The examination that had a reject/retake', on_delete=django.db.models.deletion.CASCADE, related_name='reject_incidents', to='exam.pemeriksaan')),
                ('reject_reason', auto_prefetch.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.rejectreason')),
                ('reported_by', auto_prefetch.ForeignKey(blank=True, help_text='Staff member who identified and reported the reject', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reject_incidents_reported', to=settings.AUTH_USER_MODEL)),
                ('technologist', auto_prefetch.ForeignKey(blank=True, help_text='Radiographer who performed the examination', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reject_incidents_as_tech', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reject Incident',
                'verbose_name_plural': 'Reject Incidents',
                'ordering': ['-reject_date'],
                'abstract': False,
                'base_manager_name': 'prefetch_manager',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('prefetch_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='rejectcategory',
            constraint=models.UniqueConstraint(fields=('category_type', 'name'), name='unique_category_name_per_type'),
        ),
        migrations.AddField(
            model_name='rejectanalysis',
            name='approved_by',
            field=auto_prefetch.ForeignKey(blank=True, help_text='Senior staff who approved this analysis', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reject_analyses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rejectanalysis',
            name='created_by',
            field=auto_prefetch.ForeignKey(blank=True, help_text='Quality manager who created this analysis', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_reject_analyses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rejectanalysis',
            name='modality',
            field=auto_prefetch.ForeignKey(help_text='Modality being analyzed', on_delete=django.db.models.deletion.CASCADE, to='exam.modaliti'),
        ),
        migrations.AddConstraint(
            model_name='rejectreason',
            constraint=models.UniqueConstraint(fields=('category', 'reason'), name='unique_reason_per_category'),
        ),
        migrations.AddIndex(
            model_name='rejectincident',
            index=models.Index(fields=['reject_date'], name='exam_reject_reject__e83364_idx'),
        ),
        migrations.AddIndex(
            model_name='rejectincident',
            index=models.Index(fields=['analysis', 'reject_date'], name='exam_reject_analysi_1e7a12_idx'),
        ),
        migrations.AddIndex(
            model_name='rejectincident',
            index=models.Index(fields=['examination'], name='exam_reject_examina_97b61a_idx'),
        ),
        migrations.AddConstraint(
            model_name='rejectanalysis',
            constraint=models.UniqueConstraint(fields=('analysis_date', 'modality'), name='unique_analysis_per_month_modality'),
        ),
    ]
