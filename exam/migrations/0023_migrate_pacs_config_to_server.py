# Generated by Django 4.2.6 on 2025-08-01 12:11

from django.db import migrations


def migrate_existing_pacs_config(apps, schema_editor):
    """Migrate existing PacsConfig data to PacsServer and update PacsExam records"""
    PacsConfig = apps.get_model('exam', 'PacsConfig')
    PacsServer = apps.get_model('exam', 'PacsServer')
    PacsExam = apps.get_model('exam', 'PacsExam')
    
    # Migrate existing config to first PacsServer
    existing_config = PacsConfig.objects.first()
    if existing_config:
        migrated_server = PacsServer.objects.create(
            name='Main Hospital PACS',
            orthancurl=existing_config.orthancurl,
            viewrurl=existing_config.viewrurl,
            endpoint_style=existing_config.endpoint_style,
            is_active=True,
            is_primary=True,
            comments='Migrated from original PACS configuration - Main production server'
        )
        
        # Update all existing PacsExam records to reference the migrated server
        PacsExam.objects.filter(pacs_server__isnull=True).update(pacs_server=migrated_server)
        
        print(f"‚úÖ Migrated PacsConfig to PacsServer: {migrated_server.name}")
        print(f"‚úÖ Updated {PacsExam.objects.filter(pacs_server=migrated_server).count()} PacsExam records")
    else:
        print("‚ÑπÔ∏è  No existing PacsConfig found to migrate")


def reverse_migration(apps, schema_editor):
    """Reverse migration - remove PacsServer data"""
    PacsServer = apps.get_model('exam', 'PacsServer')
    PacsExam = apps.get_model('exam', 'PacsExam')
    
    # Clear pacs_server references from PacsExam
    PacsExam.objects.update(pacs_server=None)
    
    # Delete all PacsServer records
    PacsServer.objects.all().delete()
    
    print("üîÑ Reversed migration - cleared PacsServer data")


class Migration(migrations.Migration):

    dependencies = [
        ('exam', '0022_pacsserver_pacsserver_unique_primary_pacs_and_more'),
    ]

    operations = [
        migrations.RunPython(migrate_existing_pacs_config, reverse_migration),
    ]
