# Nginx Configuration for RIS Docker Deployment

upstream django_backend {
    server app:8000;
    keepalive 32;
}

upstream nextjs_frontend {
    server app:3000;
    keepalive 32;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

# Main server block
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    
    server_name _;
    client_max_body_size 100M;
    client_body_timeout 120s;
    client_header_timeout 120s;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Remove server header
    server_tokens off;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Frontend (Next.js) - serve most requests
    location / {
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://nextjs_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API endpoints - Django backend
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://django_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API timeout settings (extended for AI processing)
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Admin interface
    location /admin/ {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://django_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Authentication endpoints
    location ~ ^/(login/|logout/|token/) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://django_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files - served directly by nginx
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Security for static files
        location ~* \.(py|pyc|pyo|pyd|pdb|so)$ {
            deny all;
        }
    }

    # Media files - served with authentication
    location /media/ {
        alias /var/www/media/;
        expires 1d;
        add_header Cache-Control "private, no-cache";
        
        # Add authentication check for sensitive medical data
        # auth_request /auth-check;
        
        # Security for media files
        location ~* \.(py|pyc|pyo|pyd|pdb|so)$ {
            deny all;
        }
    }

    # Health check endpoint
    location /health/ {
        proxy_pass http://django_backend;
        access_log off;
    }

    # WebSocket connections for real-time features
    location /ws/ {
        proxy_pass http://django_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }

    # Block common attack patterns
    location ~ /\.ht {
        deny all;
    }
    
    location ~ /\.(git|svn) {
        deny all;
    }
    
    location ~ \.(env|log|ini)$ {
        deny all;
    }

    # Block access to sensitive files
    location ~ ^/(requirements|pyproject|poetry|Dockerfile|docker-compose) {
        deny all;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
    }
    
    location = /50x.html {
        root /var/www/html;
    }
}

# HTTPS server (uncomment and configure for production with SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name yourdomain.com;
# 
#     # SSL Configuration
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
# 
#     # Modern configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
# 
#     # Include all location blocks from above server
#     include /etc/nginx/conf.d/locations.conf;
# }